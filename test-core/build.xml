<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 * =======================================================================
 * = Name:        $Id: build.xml,v 1.37 2012/01/19 22:28:57 wfro Exp $
 * = Description: openCRX/Core Test build.xml
 * = Revision:    $Revision: 1.37 $
 * = Date:        $Date: 2012/01/19 22:28:57 $
 * = Copyright:   (c) 2003-2011 CRIXP AG
 * =======================================================================
 * This software is published under the BSD license
 * as listed below.
 * 
 * Copyright (c) 2004-2011, CRIXP Corp., Switzerland
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met:
 * 
 * * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in
 * the documentation and/or other materials provided with the
 * distribution.
 * 
 * * Neither the name of CRIXP Corp. nor the names of the contributors
 * to openCRX may be used to endorse or promote products derived
 * from this software without specific prior written permission
 * 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * This product includes software developed by the Apache Software
 * Foundation (http://www.apache.org/).
 * 
 * This product includes software developed by contributors to
 * openMDX (http://www.openmdx.org/)
-->
<project
	name="opencrx-test.core" 
	default="-projecthelp" 
	xmlns:openmdx="xri://(antlib:org.openmdx.tools.ant)"
	xmlns:antcontrib="antlib:net.sf.antcontrib"
>
	<description>Build the openCRX/Core Test project</description>
	<property name="project.specification.title" value="openCRX/Core Test"/>
	<!-- Slash separated platform list, the last entry being the default -->
	<property name="project.platform.list" value="jre-1.6"/>
	<!-- openMDX libraries -->
	<property name="openmdx.version" value="2.9.1"/>
	<import file="../opt/openmdx-${openmdx.version}/ant/etc/ant/build-properties.xml"/>
	<import file="../opt/openmdx-${openmdx.version}/ant/etc/ant/build-library.xml"/>
	<!-- classpath -->
	<path id="project.lib.classpath">
		<path refid="openmdx.core.lib"/>
		<path refid="osgi.enterprise.api"/>
		<path refid="osgi.extension.lib"/>
		<pathelement location="../${build.java.platform}/core/lib/opencrx-kernel.jar"/>
		<pathelement location="../${build.java.platform}/core/lib/opencrx-security.jar"/>
		<pathelement location="../${build.java.platform}/core/lib/opencrx-application.jar"/>
		<pathelement location="../${build.java.platform}/core/lib/opencrx-resources.jar"/>
		<pathelement location="../opt/openmdx-${openmdx.version}/${build.java.platform}/security/lib/openmdx-security.jar"/>
		<pathelement location="../opt/openmdx-${openmdx.version}/${build.java.platform}/portal/lib/openmdx-portal.jar"/>
	</path>
	<path id="project.bin.classpath">
		<path refid="project.lib.classpath"/>
		<pathelement location="${basedir}/src/resource"/>
		<pathelement location="${build.dir}/bin"/>
		<pathelement location="${build.dir}/model/${ant.project.name}.openmdx-xmi.zip"/>
		<pathelement location="../opt/postgresql/${build.java.platform}/postgresql-9/lib/postgresql-9.1.jdbc4.jar"/>
		<pathelement location="../opt/hsqldb/${build.java.platform}/hsqldb-2/lib/hsqldb.jar"/>
		<pathelement location="../codehaus/${build.java.platform}/janino/lib/janino.jar"/>
		<pathelement location="../opt/openmdx-${openmdx.version}/osgi/${build.java.platform}/extension/lib/commons-lang.jar"/>
		<pathelement location="../opt/openmdx-${openmdx.version}/osgi/${build.java.platform}/extension/lib/commons-collections.jar"/>
		<pathelement location="../opt/openmdx-${openmdx.version}/osgi/${build.java.platform}/extension/lib/commons-collections-extendedproperties.jar"/>
		<pathelement location="../opt/openmdx-${openmdx.version}/osgi/${build.java.platform}/extension/lib/serp.jar"/>
	</path>
	<property name="junit.test.datasource.name" value="jdbc_opencrx_CRX" />	
	<patternset id="project.junit.test.case">
		<include name="test/org/opencrx/**/Test*.java"/>
	</patternset>
	<!-- ******************************************************************* -->
	<!-- * generate -->
	<!-- ******************************************************************* -->
	<target name="generate" description="Generate version, jt and model dependend files" depends="build-init">
		<ant dir="${openmdx.home}/core" inheritAll="false" target="prepare">
			<property name="build.target.platform" value="${build.java.platform}"/>
		</ant>
		<antcall target="-preprocess-model-files-"/>
	</target>
	<!-- ******************************************************************* -->
	<!-- * deliverables -->
	<!-- ******************************************************************* -->
	<target name="deliverables" description="Populate the project's deliverables directory" depends="deliverables-init,java-archives,source-archives"/>
	<!-- ******************************************************************* -->
	<!-- * distribution -->
	<!-- ******************************************************************* -->
	<target name="distribution" description="Creates all distributions" depends="distribution-init,deliverables">
		<mkdir dir="../distribution"/>
		<openmdx:archive 
			destfile="${distribution.dir}/${project.implementation.prefix}-${project.implementation.version}-${base.dir.name}.${build.target.platform}."
			format="${distribution.format}"
			checksum="MD5">
			<openmdx:archivefileset dir="${basedir}" prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}">
				<include name="build.xml"/>
				<include name="build.properties"/>
				<include name="version.properties"/>
				<include name="etc/**"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset dir="${project.home}" prefix="${project.implementation.prefix}-${project.implementation.version}">				
				<include name="source-archive/test-core/**"/>
				<include name="${build.target.platform}/test-core/src/opencrx-*"/>
				<include name="${build.target.platform}/test-core/lib/opencrx-*"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}/${base.dir.name}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}/"
			>
				<include name=".classpath"/>
				<include name=".project"/>
			</openmdx:archivefileset>
			<openmdx:archivefilterchain>
				<patternset>
					<include name="**/.project"/>
					<include name="**/.classpath"/>
				</patternset>
				<tokenfilter>
				    <replaceregex pattern="([/]?openCRX.*)( \(.*\))? ~ " replace="\1 (${project.implementation.version}) ~ "/>
				    <replaceregex pattern="([/]?openMDX.*)( \(.*\))? ~ " replace="\1 (${openmdx.version}) ~ "/>
				</tokenfilter>
			</openmdx:archivefilterchain>			
		</openmdx:archive>
	</target>
	<!-- ******************************************************************* -->
	<!-- * java-archives -->
	<!-- ******************************************************************* -->
	<target name="java-archives" depends="deliverables-init,build">
		<openmdx:archive 
		  destfile="${deliver.dir}/lib/opencrx-test-core.jar"
		  format="jar"
		>
			<openmdx:archivemanifest refid="project.manifest"/>
			<manifest>
				<attribute name="Specification-Title" value="${project.specification.title} Library kernel"/>
				<attribute name="Implementation-Title" value="opencrx-kernel for ${build.target.platform}"/>
			</manifest>		
			<openmdx:archivefileset dir="${build.dir}/bin">
				<patternset id="opencrx-test-core.jar.content">
					<include name="org/opencrx/test/**"/>
					<include name="org/opencrx/xmi/**"/>
				</patternset>
			</openmdx:archivefileset>
		</openmdx:archive>
	</target>
</project>
