#if defined(MAXDB_7)
CREATE SEQUENCE kernel_REF_SEQ INCREMENT BY 1 START WITH 100000 MINVALUE 1 MAXVALUE 1000000 NOCYCLE CACHE 100
//
CREATE SEQUENCE security_REF_SEQ INCREMENT BY 1 START WITH 100000 MINVALUE 1 MAXVALUE 1000000 NOCYCLE CACHE 100
//
#elif defined(POSTGRESQL_7)
CREATE SEQUENCE kernel_REF_SEQ INCREMENT 1 START 100000;
CREATE SEQUENCE security_REF_SEQ INCREMENT 1 START 100000;

#elif defined(FIREBIRD_1)
CREATE GENERATOR kernel_REF_GENERATOR;

SET TERM ^ ;

CREATE TRIGGER kernel_REF_BI0 FOR kernel_REF
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (new.object_rid is null) THEN
    new.object_rid = GEN_ID(kernel_REF_GENERATOR,1);
END
^

CREATE GENERATOR security_REF_GENERATOR
^

CREATE TRIGGER security_REF_BI0 FOR security_REF
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (new.object_rid is null) THEN
    new.object_rid = GEN_ID(security_REF_GENERATOR,1);
END
^

#elif defined(SQL_SERVER_2000)

#elif defined(MYSQL_4)

#elif defined(ORACLE_8)
CREATE SEQUENCE KERNEL_REF_SEQ INCREMENT BY 1 START WITH 100000 MAXVALUE 1000000000 MINVALUE 1 NOCYCLE CACHE 100 NOORDER;
CREATE SEQUENCE SECURITY_REF_SEQ INCREMENT BY 1 START WITH 100000 MAXVALUE 1000000000 MINVALUE 1 NOCYCLE CACHE 100 NOORDER;

#elif defined(DB2_8)

#endif
