project.vendor.name="openCRX"
project.vendor.id="org.opencrx"
model.transformation.source=rsm

# Data directories containing customizing information
# * Content of data.dir overrides data.dir.base
# * Content of data.dir.base overrides data.dir.generic
data.dir.generic=org.opencrx
data.dir.base=org.opencrx
data.dir=org.opencrx

# Name of the web application, 
# i.e. opencrx-core-<web application name>-Web.ear 
web.application.name=CRX

# All data is accessed with paths of the form
# xri:openmdx:<model authority>/provider/<provider.name>/segment/...
provider.name=CRX

# Datasource name
datasource.name=jdbc_opencrx_CRX

# Allows to add a remote reference to the EJB
# kernel.jar. This allows to access thirdparty 
# components from openCRX extensions, e.g. user-defined 
# workflows or plugin extensions. 
# By default no external providers are added. 
# NOTE: 
# The external provider must be an openMDX based 
# provider, e.g. a gateway which in turn can delegate 
# to other thirdparty providers.
external.provider.enable.begin=<!--
external.provider.enable.end=-->
external.provider.delegation.path=NA
external.provider.jndi.name.format1=NA
external.provider.jndi.name.format2=NA

# Kernel plugin class names
kernel.interception.plugin.class.name=org.openmdx.compatibility.base.dataprovider.layer.interception.Standard_1
kernel.type.plugin.class.name=org.openmdx.compatibility.base.dataprovider.layer.type.Strict_1
kernel.application.plugin.class.name=org.opencrx.kernel.layer.application.OpenCrxKernel_1
kernel.model.plugin.class.name=org.opencrx.kernel.layer.model.AccessControl_1
kernel.persistence.plugin.class.name=org.opencrx.kernel.layer.persistence.Audit_1

# Security plugin class names
security.application.plugin.class.name=org.opencrx.security.layer.application.OpenCrxSecurity_1
security.persistence.plugin.class.name=org.opencrx.security.layer.persistence.OpenCrxDatabase_1

# Access Control
extended.access.level.basic.enable.begin=<!--
extended.access.level.basic.enable.end=-->

# Additional model packages
external.model.enable.begin=<!--
external.model.enable.end=-->
model.package.ext.1=NA
model.package.ext.2=NA
model.package.ext.3=NA
model.package.ext.4=NA
model.package.ext.5=NA
model.package.ext.6=NA
model.package.ext.7=NA
model.package.ext.8=NA
model.package.ext.9=NA

# Classes matching the pattern are added to 
# opencrx-extension.jar
opencrx.extension.classes=~

imap.listenPort=1143
