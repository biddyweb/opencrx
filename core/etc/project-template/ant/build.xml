<?xml version="1.0" encoding="iso-8859-1"?>
<!--
 * =======================================================================
 * = Name:        $Id: build.xml,v 1.8 2007/08/26 21:00:40 wfro Exp $
 * = Description: openCRX build.xml
 * = Revision:    $Revision: 1.8 $
 * = Date:        $Date: 2007/08/26 21:00:40 $
 * = Copyright:   (c) 2003-2007 CRIXP AG
 * =======================================================================
 * This software is published under the BSD license
 * as listed below.
 * 
 * Copyright (c) 2004-2007, CRIXP Corp., Switzerland
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met:
 * 
 * * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in
 * the documentation and/or other materials provided with the
 * distribution.
 * 
 * * Neither the name of CRIXP Corp. nor the names of the contributors
 * to openCRX may be used to endorse or promote products derived
 * from this software without specific prior written permission
 * 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
 * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * This product includes software developed by the Apache Software
 * Foundation (http://www.apache.org/).
 * 
 * This product includes software developed by contributors to
 * openMDX (http://www.openmdx.org/)
-->
<!-- This template allows you to set-up a custom openCRX project. You can do this as follows:
		1. 	Create at any location a directory where you build your custom openCRX projects, e.g. opencrx-custom
		2. 	Create a directory where you want to put your first openCRX custom project, e.g. opencrx-custom/myopencrx
		3. 	Copy this file (build.xml) to opencrx-custom/myopencrx
		4. 	From the openCRX/Core distribution copy the file build.properties to opencrx-custom/myopencrx. 
				Adapt build.properties to your needs
		5. 	From the openCRX/Core distribution copy version.properties to opencrx-custom/myopencrx. 
				Adapt version.properties to your needs
		6. 	Create the directory opencrx-custom/opt
		7. 	Extract opencrx-1.11.0-core.jre-1.5.zip to opencrx-custom/opt
		8. 	Extract openmdx-1.18.2-core.jre-1.5.zip to opencrx-custom/opt
		9. 	Extract openmdx-1.18.2-portal.jre-1.5.zip to opencrx-custom/opt
		10. 	Extract openmdx-1.18.2-security.jre-1.5.zip to opencrx-custom/opt
		11. 	Extract openmdx-1.18.2-websphere.websphere-6.zip to opencrx-custom/opt
		12. 	Create the directory opencrx-custom/myopencrx/src/data/myopencrx. This is the place where you 
				put your myopencrx-specific customizing. The directory structure has the same layout as the directory
				./src/data/org.opencrx from the openCRX/Core distribution. Any file that you put in 
				opencrx-custom/myopencrx/src/data/myopencrx overrides the corresponding file from openCRX/Core
				when building the assemblies.
				IMPORTANT: At least you must create the directory ./myopencrx/WEB-INF. In a first step copy/past this 
				directory from the openCRX/Core distribution. Only start to modify web.xml if you are able to successfully 
				build and deploy the myopencrx EARs.
		13.	The following ant targets are available:
				* ant deliverables: build the myopencrx deliverables
				* ant assemble: builds the myopencrx assemblies (Web and App EAR)
				* ant distribution: builds the myopencrx distribution
-->
<project 
	name="opencrx-«project name»" 
	default="-projecthelp" 
	xmlns:openmdx="xri://(antlib:org.openmdx.tools.ant)" 
	xmlns:antcontrib="antlib:net.sf.antcontrib" 
	xmlns:ivy="xri:(antlib:fr.jayasoft.ivy.ant)"
>
	<description>Build the openCRX/«project name» project</description>
	<property name="project.specification.title" value="openCRX/«project name»"/>
	<!-- Slash separated platform list, the last entry being the default -->
	<property name="project.platform.list" value="jre-1.5"/>
	<!-- openMDX libraries -->
	<property name="openmdx.version" value="1.18.2"/>
	<import file="../opt/openmdx-${openmdx.version}/ant/etc/ant/build-properties.xml"/>
	<import file="../opt/openmdx-${openmdx.version}/ant/etc/ant/build-library.xml"/>
	<!-- openCRX libraries -->
	<property name="opencrx.version" value="1.11.0"/>
	<property name="opencrx.home" location="../opt/opencrx-${opencrx.version}"/>
	<path id="project.lib.classpath">
		<path refid="openmdx.core.lib"/>
		<path refid="java2.enterprise.api"/>
		<path refid="java2.extension.lib"/>
		<pathelement location="${opencrx.home}/${build.java.platform}/core/lib/opencrx-kernel.jar"/>
		<pathelement location="${opencrx.home}/${build.java.platform}/core/lib/opencrx-security.jar"/>
		<pathelement location="${openmdx.home}/${build.java.platform}/security/lib/openmdx-security.jar"/>
	</path>
	<path id="project.bin.classpath">
		<path refid="project.lib.classpath"/>
		<pathelement location="${basedir}/src/resource"/>
		<pathelement location="${build.dir}/bin"/>
		<pathelement location="${build.dir}/model/${ant.project.name}.openmdx-xmi.zip"/>
		<pathelement location="../opt/mysql/jre-1.5/mysql-5/lib/mysql-connector-java-3.0.16.jar"/>
	</path>
  <mkdir dir="src/java"/>
	<!-- ******************************************************************* -->
	<!-- * generate -->
	<!-- ******************************************************************* -->
	<target 
	  name="generate" 
	  description="Generate version, jt and model dependend files" 
	  depends="build-init"
	>
		<ant dir="${openmdx.home}/core" inheritAll="false" target="prepare">
			<property name="build.target.platform" value="${build.java.platform}"/>
		</ant>
		<ant dir="${openmdx.home}/security" inheritAll="false" target="prepare">
			<property name="build.target.platform" value="${build.java.platform}"/>
		</ant>
		<ant dir="${opencrx.home}/core" inheritAll="false" target="prepare">
			<property name="build.target.platform" value="${build.java.platform}"/>
		</ant>
		<antcall target="-preprocess-model-files-"/>
	</target>
	<!-- ******************************************************************* -->
	<!-- * test -->
	<!-- ******************************************************************* -->
	<target name="test"/>
	<!-- ******************************************************************* -->
	<!-- * deliverables -->
	<!-- ******************************************************************* -->
	<target 
	  name="deliverables" 
	  description="Populate the project's deliverables directory" 
	  depends="deliverables-init,java-archives,source-archives"
	/>
	<!-- ******************************************************************* -->
	<!-- * enhance -->
	<!-- ******************************************************************* -->
	<target 
		name="enhance" 
		description="enhancement" 
  	depends="compile-java"
	>
	</target>
	<!-- ******************************************************************* -->
	<!-- * assemble -->
	<!-- ******************************************************************* -->
	<target name="assemble" description="Build assemblies" depends="build-init">
		<!-- Assert existence of data.dir directories -->
		<mkdir dir="src/data/${data.dir}/_style"/>
		<mkdir dir="src/data/${data.dir}/bootstrap"/>
		<mkdir dir="src/data/${data.dir}/code"/>
		<mkdir dir="src/data/${data.dir}/data"/>
		<mkdir dir="src/data/${data.dir}/documents"/>
		<mkdir dir="src/data/${data.dir}/filters"/>
		<mkdir dir="src/data/${data.dir}/html"/>
		<mkdir dir="src/data/${data.dir}/images"/>
		<mkdir dir="src/data/${data.dir}/report"/>
	  <mkdir dir="src/data/${data.dir}/texts"/>
		<mkdir dir="src/data/${data.dir}/ui"/>
		<mkdir dir="src/data/${data.dir}/javascript"/>
		<mkdir dir="src/data/${data.dir}/WEB-INF/client-gateway"/>
		<mkdir dir="src/data/${data.dir}/WEB-INF/server-gateway"/>
		<mkdir dir="src/data/${data.dir}/wizards"/>
		<!-- Assert existence of data.dir.base directories -->
		<mkdir dir="src/data/${data.dir.base}/_style"/>
		<mkdir dir="src/data/${data.dir.base}/bootstrap"/>
		<mkdir dir="src/data/${data.dir.base}/code"/>
		<mkdir dir="src/data/${data.dir.base}/data"/>
		<mkdir dir="src/data/${data.dir.base}/documents"/>
		<mkdir dir="src/data/${data.dir.base}/filters"/>
		<mkdir dir="src/data/${data.dir.base}/html"/>
		<mkdir dir="src/data/${data.dir.base}/images"/>
		<mkdir dir="src/data/${data.dir.base}/report"/>
		<mkdir dir="src/data/${data.dir.base}/ui"/>
		<mkdir dir="src/data/${data.dir.base}/javascript"/>
		<mkdir dir="src/data/${data.dir.base}/WEB-INF/client-gateway"/>
		<mkdir dir="src/data/${data.dir.base}/WEB-INF/server-gateway"/>
		<mkdir dir="src/data/${data.dir.base}/wizards"/>
	  <!-- Build assemblies -->
		<ant dir="${opencrx.home}/core" inheritAll="true" target="assemble">
			<property name="deliver.dir" value="${deliver.dir}"/>		
			<property name="build.target.platform" value="${build.java.platform}"/>
			<property name="data.home" value="${basedir}"/>
			<property name="data.dir.generic" value="${data.dir.generic}"/>
			<property name="data.dir.base" value="${data.dir.base}"/>
			<property name="data.dir" value="${data.dir}"/>
			<property name="web.application.name" value="${web.application.name}"/>
			<property name="provider.name" value="${provider.name}"/>
			<property name="datasource.name" value="${datasource.name}"/>
			<property name="external.provider.enable.begin" value="${external.provider.enable.begin}"/>
			<property name="external.provider.enable.end" value="${external.provider.enable.end}"/>
			<property name="external.provider.delegation.path" value="${external.provider.delegation.path}"/>
			<property name="external.provider.jndi.name.format1" value="${external.provider.jndi.name.format1}"/>
			<property name="external.provider.jndi.name.format2" value="${external.provider.jndi.name.format2}"/>
			<property name="opencrx.extension.classes" value="${opencrx.extension.classes}"/>
			<property name="kernel.interception.plugin.class.name" value="${kernel.interception.plugin.class.name}"/>
			<property name="kernel.type.plugin.class.name" value="${kernel.type.plugin.class.name}"/>
			<property name="kernel.application.plugin.class.name" value="${kernel.application.plugin.class.name}"/>
			<property name="kernel.model.plugin.class.name" value="${kernel.model.plugin.class.name}"/>
			<property name="kernel.persistence.plugin.class.name" value="${kernel.persistence.plugin.class.name}"/>
			<property name="model.package.ext.1" value="${model.package.ext.1}"/>
			<property name="model.package.ext.2" value="${model.package.ext.2}"/>
			<property name="model.package.ext.3" value="${model.package.ext.3}"/>
			<property name="model.package.ext.4" value="${model.package.ext.4}"/>
			<property name="model.package.ext.5" value="${model.package.ext.5}"/>
			<property name="model.package.ext.6" value="${model.package.ext.6}"/>
			<property name="model.package.ext.7" value="${model.package.ext.7}"/>
			<property name="model.package.ext.8" value="${model.package.ext.8}"/>
			<property name="model.package.ext.9" value="${model.package.ext.9}"/>
			<property name="external.model.enable.begin" value="${external.model.enable.begin}"/>
			<property name="external.model.enable.end" value="${external.model.enable.end}"/>
		</ant>
	</target>
	<!-- ******************************************************************* -->
	<!-- * distribution -->
	<!-- ******************************************************************* -->
	<target name="distribution" description="Creates all distributions" depends="distribution-init,deliverables">
		<mkdir dir="../distribution"/>
		<openmdx:archive 
			destfile="${distribution.dir}/${project.implementation.prefix}-${project.implementation.version}-${base.dir.name}.${build.target.platform}."
			format="${distribution.format}"
			checksum="MD5"
		>
			<openmdx:archivefileset 
				dir="${basedir}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}/${base.dir.name}"
			>
			<include name="LICENSE"/>
			<include name="README"/>
			<include name="RELEASE-NOTES"/>
			<include name="NOTICE"/>
			<include name="build.xml"/>
			<include name="build.properties"/>
			<include name="version.properties"/>
			<include name="etc/**"/>
			</openmdx:archivefileset>
			<openmdx:archivefileset 
				dir="${project.home}" 
				prefix="${project.implementation.prefix}-${project.implementation.version}"
			>				
			<include name="source-archive/«project name»/**"/>
			<include name="${build.target.platform}/«project name»/src/opencrx-*"/>
			<include name="${build.target.platform}/«project name»/lib/opencrx-*"/>
			</openmdx:archivefileset>
		</openmdx:archive>
	</target>
	<!-- ******************************************************************* -->
	<!-- * java-archives -->
	<!-- ******************************************************************* -->
	<target name="java-archives" depends="deliverables-init,build">
	
		<!-- opencrx-«project name».jar -->
		<openmdx:archive 
		  destfile="${deliver.dir}/lib/opencrx-«project name».jar"
		  format="jar"
		>
			<openmdx:archivemanifest refid="project.manifest"/>
			<manifest>
				<attribute name="Specification-Title" value="${project.specification.title} Library «project name»"/>
				<attribute name="Implementation-Title" value="opencrx-«project name» for ${build.target.platform}"/>
			</manifest>		
			<openmdx:archivefileset dir="${build.dir}/bin">
				<patternset id="opencrx-«project name».jar.content">
					<include name="org/opencrx/**"/>
					<include name="org/opencrx/xmi/**"/>
				</patternset>
			</openmdx:archivefileset>
      <!-- uncomment if project contains customized model			
			<openmdx:archivefileset src="${build.dir}/model/${ant.project.name}.openmdx-xmi.zip">
				<patternset refid="opencrx-«project name».jar.content"/>
			</openmdx:archivefileset>
			-->
		</openmdx:archive>

		<!-- opencrx-extension.jar -->
		<openmdx:archive
			destfile="${deliver.dir}/lib/opencrx-extension.jar"
			format="jar"
	  >
			<openmdx:archivemanifest refid="project.manifest"/>
			<manifest>
				<attribute name="Specification-Title" value="${project.specification.title} Library extension"/>
				<attribute name="Implementation-Title" value="opencrx-extension for ${build.target.platform}"/>
			</manifest>
			<openmdx:archivefileset dir="${build.dir}/bin">
				<patternset id="opencrx-extension.jar.content">
				  <include name="${opencrx.extension.classes}"/>
				</patternset>
			</openmdx:archivefileset>
		</openmdx:archive>
	
	</target>
</project>
